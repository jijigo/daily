{"version":3,"sources":["logo.svg","component/layout/Header.js","component/TodoItem.js","component/TodoList.js","component/AddTodo.js","component/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","style","textAlign","Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","maxWidth","margin","display","justifyContent","alignItems","inherits","createClass","key","value","_this$props$todo","props","todo","id","title","es_checkbox","onChange","markComplete","bind","checked","completed","textDecoration","icon","type","onClick","deleteTodo","Component","TodoList","todos","map","component_TodoItem","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","es_form","formStyle","FormItem_default","width","flex","marginBottom","input","placeholder","es_button","About","Fragment","App","deleteIndex","findIndex","splice","Axios","delete","then","res","post","toConsumableArray","data","_this2","get","_this3","BrowserRouter","className","Route","exact","path","render","component_AddTodo","component_TodoList","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faf03821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <header style={{textAlign: 'center'}}>\n      <h1>TodoList</h1>\n      <Link to=\"/\">Home</Link> | <Link to=\"/about\">About</Link>\n    </header>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Checkbox, Icon } from 'antd';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px solid #eee',\n      maxWidth: '500px',\n      margin: 'auto',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }\n\n  render() {\n    const {id, title} = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <Checkbox onChange={this.props.markComplete.bind(this, id)}\n            checked={this.props.todo.completed}>\n            <span style={{textDecoration: this.props.todo.completed ? 'line-through' : 'none'}}>\n            { title }\n            </span>\n          </Checkbox>\n        </p>\n        <Icon type=\"close\" onClick={this.props.deleteTodo.bind(this, id)}/>\n        {/* <button >x</button> */}\n      </div>\n    )\n  }\n}\n\n// propsType\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem\n","import React, { Component } from 'react' // component 必須有這一行\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass TodoList extends Component {\n    render() {\n        return this.props.todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} deleteTodo={this.props.deleteTodo}/>\n        ))\n    }\n}\n\n// propsType\nTodoList.propTypes = {\n    todos: PropTypes.array.isRequired\n}\n\nexport default TodoList;","import React, { Component } from 'react'\n// import Button from 'antd/lib/button';\nimport {\n  Form, Icon, Input, Button,\n} from 'antd';\nimport FormItem from 'antd/lib/form/FormItem';\n\nexport class AddTodo extends Component {\n  state = {\n    title: '',\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({\n      title: ''\n    })\n  }\n\n\n  render() {\n    return (\n      <Form style={formStyle}>\n        <FormItem style={{width: '100%', flex: '1', marginBottom: '0'}}>\n          <Input placeholder=\"Add Todo...\" name=\"title\" style={{width: '100%'}}\n            value={this.state.title} onChange={this.onChange}/>\n        </FormItem>\n        <FormItem style={{marginBottom: '0'}}>\n          <Button type=\"submit\" onClick={this.onSubmit}>submit</Button>\n        </FormItem>\n      </Form>\n    )\n  }\n}\n\nconst formStyle = {\n  textAlign: 'center',\n  display: 'flex',\n  margin: 'auto',\n  maxWidth: '500px'\n}\n\n\n\nexport default AddTodo\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is a todo app by React.</p>\n    </React.Fragment>\n  )\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './component/layout/Header'\nimport TodoList from './component/TodoList';\nimport AddTodo from './component/AddTodo';\nimport About from './component/pages/About';\nimport FormItem from 'antd/lib/form/FormItem';\nimport uuid from 'uuid';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Axios from 'axios';\nimport { read } from 'fs';\n\nclass App extends Component {\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(res => this.setState({todos: res.data}))\n  }\n\n  state = {\n    todos: []\n  }\n\n  deleteTodo = (id) => {\n    const deleteIndex = this.state.todos.findIndex(todo => todo.id === id);\n    this.state.todos.splice(deleteIndex, 1);\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => {\n        this.setState({\n          todos: this.state.todos\n        })\n      })\n\n    // const deleteIndex = this.state.todos.findIndex(todo => todo.id === id);\n    // this.state.todos.splice(deleteIndex, 1);\n    // this.setState({\n    //   todos: this.state.todos\n    // })\n  }\n\n  addTodo = (title) => {\n    Axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }))\n  }\n\n  markComplete = (id) => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if(id === todo.id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddTodo addTodo={this.addTodo}/>\n              <TodoList todos={this.state.todos} markComplete={this.markComplete}\n                deleteTodo={this.deleteTodo} />\n            </React.Fragment>\n          )} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}